{"version":3,"sources":["components/Ingredients.js","components/IngredientList.js","components/Recipes.js","components/RecipeList.js","components/RecipeIngredientEdit.js","components/RecipeEdit.js","components/App.js","reportWebVitals.js","index.js"],"names":["Ingredients","props","name","amount","className","IngredientList","ingredientElement","ingredients","map","ingredient","id","Recipes","useContext","RecipeContext","deleteRecipe","handleRecipeSelect","cookTime","servings","instructions","onClick","style","whiteSpace","RecipeList","recipes","handleRecipeAdd","recipe","RecipeIngredientEdit","handleIngredientChange","handleIngredietDelete","handleChange","changes","type","value","onInput","e","target","RecipeEdit","handleRecipeChange","newIngredients","index","findIndex","i","filter","undefined","htmlFor","onChange","min","parseInt","newIngredient","uuidv4","handleIngredientAdd","React","createContext","LOCAL_STORAGE_KEY","sampleRecipes","App","useState","selectedRecipeId","setSelectedRecipeId","setRecipes","selectedRecipe","find","useEffect","recipeJSON","localStorage","getItem","JSON","parse","setItem","stringify","recipeContextValue","newRecipe","serevings","newRecipes","r","Provider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4f3b9d62.chunk.js","sourcesContent":["import React from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nexport default function Ingredients(props) {\n    const{\n        name,\n        amount\n    }=props\n    return (\n    <div className=\"row\">\n      <div className=\"col col-lg-2\">{name}</div>\n      <div className=\"col col-lg-2\">{amount}</div>\n    </div>\n\n    )\n}\n","import React from 'react'\nimport Ingredients from './Ingredients'\n\nexport default function IngredientList({ingredients}) {\n    \n    const ingredientElement = ingredients.map(ingredient=>{return <Ingredients key={ingredient.id} {...ingredient}/>})\n    return (\n        <>\n        <div>\n            {ingredientElement}\n        </div>\n        </>\n\n    )\n}\n","import React,{useContext} from 'react'\nimport IngredientList from './IngredientList'\nimport { RecipeContext } from './App'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nexport default function Recipes(props) {\n    const {deleteRecipe, handleRecipeSelect} = useContext(RecipeContext)\n    const{\n        id,\n        name,\n        cookTime,\n        servings,\n        instructions,\n        ingredients,\n    }=props\n\n    return (\n      <div className=\"col\">\n          <div className=\"row\">\n            <div className=\"col\"><h3>{name}</h3></div>        \n            <div className=\"col\">\n                <button className=\"btn btn-success\" onClick={()=>handleRecipeSelect(id)}>Edit</button>\n                <button className=\"btn btn-warning\" onClick={()=>deleteRecipe(id)}>Delete</button>\n            </div>\n          </div>\n          <div>\n              <span>Cook Time:</span>\n              <span>{cookTime}</span>\n          </div>\n          <div>\n              <span>Servings:</span>\n              <span>{servings}</span>\n          </div>\n          <div>\n              <span>Instructions:</span>\n              <div><span style={{whiteSpace:\"pre-wrap\"}}>{instructions}</span></div>\n          </div>\n          <div>\n              <span>Ingredients:</span>\n              <div><span style={{whiteSpace:\"pre-wrap\"}}><IngredientList ingredients={ingredients}/></span></div>\n          </div>\n          \n      </div>\n    )\n}\n","import React, {useContext} from 'react'\nimport Recipes from './Recipes.js'\nimport { RecipeContext } from './App.js'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nexport default function RecipeList({recipes}) {\n    const {handleRecipeAdd} = useContext(RecipeContext)\n    return (\n       <div className=\"col recipe-list\">\n        <div>\n            {recipes.map(recipe=>{return (<Recipes key={recipe.id} {...recipe}/>)})}\n        </div>\n        <div>\n            <button className=\"btn btn-primary\" onClick={handleRecipeAdd}>Add Recipe</button>\n        </div>        \n       </div>\n    )\n}\n","import React from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nexport default function RecipeIngredientEdit(props) {\n  const{ingredient,\n    handleIngredientChange,\n    handleIngredietDelete} = props\n  \n  function handleChange(changes){\n    handleIngredientChange(ingredient.id,{...ingredient,...changes})\n  }\n    return (\n        <div className=\"row\">\n          <div className=\"col\"><input type=\"text\" value={ingredient.name} onInput={(e)=>handleChange({name:e.target.value})}/></div>\n          <div className=\"col\"><input type=\"text\" value={ingredient.amount} onInput={(e)=>handleChange({amount:e.target.value})}/></div>\n          <div className=\"col\"><button onClick={()=>handleIngredietDelete(ingredient.id)}>&times;</button></div>\n        </div>\n    )\n}\n","import React, {useContext} from 'react'\nimport RecipeIngredientEdit from './RecipeIngredientEdit'\nimport { RecipeContext } from './App'\nimport { v4 as uuidv4 } from 'uuid'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nexport default function RecipeEdit({recipe}) {\n    const{handleRecipeChange,\n        handleRecipeSelect} = useContext(RecipeContext)\n\n    function handleChange(changes){\n        handleRecipeChange(recipe.id,{...recipe, ...changes})\n    }\n\n    function handleIngredientChange(id,ingredient){\n        const newIngredients = [...recipe.ingredients]\n        const index = newIngredients.findIndex(i=>i.id===id)\n        newIngredients[index] = ingredient\n        handleChange({ingredients: newIngredients})\n    }\n    \n    function handleIngredientAdd(){\n        const newIngredient={\n            id:uuidv4(),\n            name:'',\n            amount:''\n        }\n        handleChange({ingredients: [...recipe.ingredients, newIngredient]})\n    }\n\n    function handleIngredietDelete(id){\n        handleChange({ingredients: recipe.ingredients.filter( i => i.id !== id)})\n    }\n\n    return (\n        <div className=\"col recipe-edit\">\n            <div  className=\"row close\">\n                <button onClick={()=>handleRecipeSelect(undefined)}>&times;</button>\n            </div>\n\n            <div>\n                <div className=\"row right\">\n                <label htmlFor=\"name\">Name</label>\n                <input type=\"text\" name=\"name\" id=\"name\" value={recipe.name} onChange={e=>handleChange({name:e.target.value}) } /> \n                </div>\n\n                <div className=\"row right\">\n                <label htmlFor=\"cookTime\">Cook Time</label>\n                <input type=\"text\" name=\"cookTime\" id=\"cookTime\" value={recipe.cookTime} onChange={e=>handleChange({cookTime:e.target.value}) } /> \n                </div>\n\n                <div className=\"row right\">\n                <label htmlFor=\"servings\">Servings</label>\n                <input type=\"text\" min=\"1\" name=\"servings\" id=\"servings\" value={recipe.servings} onChange={e=>handleChange({servings:parseInt(e.target.value) || ''}) }/> \n                </div>\n\n                <div className=\"row right\">\n                <label htmlFor=\"instructions\">Instructions</label>\n                <textarea name=\"instructions\" id=\"instructions\" value={recipe.instructions} onChange={e=>handleChange({instructions:e.target.value}) }>\n                    \n                </textarea>\n                </div>\n            </div>\n\n            <br />\n\n            <label>Ingredients</label>\n            <div className=\"row\">\n                <div className=\"col\">Name</div>\n                <div className=\"col\">Amount</div>\n                <div className=\"col\"></div>\n                <div></div>\n                {recipe.ingredients.map(ingredient=>(\n                    <RecipeIngredientEdit \n                    key={ingredient.id} \n                    handleIngredientChange={handleIngredientChange} \n                    handleIngredietDelete={handleIngredietDelete}\n                    ingredient={ingredient}/>\n                ))}\n            </div>\n               \n            <div>\n                <button className=\"btn btn-info add-ingredient\" onClick={()=>handleIngredientAdd()}>Add Ingredients</button>\n            </div>           \n        </div>\n\n    )\n}\n","import React, { useState, useEffect } from 'react'\nimport RecipeList from './RecipeList'\nimport RecipeEdit from './RecipeEdit'\nimport { v4 as uuidv4 } from 'uuid'\nimport '../css/App.css'\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nexport const RecipeContext = React.createContext();\nconst LOCAL_STORAGE_KEY = 'cookingWithReact.recipes'\n\nfunction App() {   \n    const[selectedRecipeId, setSelectedRecipeId] = useState()\n    const [recipes, setRecipes] = useState(sampleRecipes)\n    const selectedRecipe = recipes.find(recipe=>recipe.id===selectedRecipeId)\n\n    useEffect(()=>{\n        const recipeJSON = localStorage.getItem(LOCAL_STORAGE_KEY)\n        if(recipeJSON != null) setRecipes(JSON.parse(recipeJSON))\n    } \n    ,[])\n\n    useEffect(()=>{\n        localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(recipes))\n    }, [recipes])\n\n    const recipeContextValue = {\n        handleRecipeAdd, \n        deleteRecipe,\n        handleRecipeSelect,\n        handleRecipeChange\n    }\n\n    function handleRecipeChange(id,recipe){\n        const newRecipes = [...recipes]\n        const index = newRecipes.findIndex(r=>r.id===id)\n        newRecipes[index] = recipe\n        setRecipes(newRecipes)\n    }\n\n    function handleRecipeSelect(id){\n        setSelectedRecipeId(id)\n    }\n\n    function handleRecipeAdd() {\n        const newRecipe = {\n            id: uuidv4(),\n            name: '',\n            serevings: '',\n            cookTime: '',\n            instructions: '',\n            ingredients: [\n                { id: uuidv4, name: '', amount: '' }\n            ]\n        }\n        setSelectedRecipeId(newRecipe.id)\n        setRecipes([...recipes, newRecipe])\n    }\n\n    function deleteRecipe(id) {\n      if(selectedRecipeId != null && selectedRecipeId === id){\n          setSelectedRecipeId(undefined)\n      }\n      setRecipes(recipes.filter(recipe => recipe.id !== id))\n    }\n\n    return (\n    <RecipeContext.Provider value={recipeContextValue}>\n        <div className=\"row\">\n        <RecipeList recipes={recipes} />\n        {selectedRecipe && <RecipeEdit recipe={selectedRecipe}/>}\n        </div>\n\n    </RecipeContext.Provider>\n    )\n}\n\n    const sampleRecipes=[\n        {\n            id:1,\n            name:'Bubble tea',\n            servings:3,\n            cookTime:'1:45',\n            instructions:'1. Make the boba\\n2. Bring 8 cups water to a boil over high heat\\n3. Add the pearls',\n            ingredients:[\n                {\n                id:1,\n                name:'Black tea',\n                amount: '8 bags'\n                },\n                {\n                id:2,\n                name:'Tapioca pearls',\n                amount: '3/4 cup'\n                }\n            ]\n        },\n        {\n            id:2,\n            name:'Matcha green tea',\n            servings:5,\n            cookTime:'0:45',\n            instructions:'1. Sift 1-2 tsp matcha into a cup using a small sifter.\\n2. Add 2oz hot water. For best results use water just under a boil.\\n3. Whisk vigorously in a zig zag motion until the tea is frothy.',\n            ingredients:[\n            {\n            id:1,\n            name:'Matcha',\n            amount: '2 tsp'\n            },\n            {\n            id:2,\n            name:'Hot water',\n            amount: '2 oz'\n            }\n            ]\n        }\n    ]\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App.js';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}